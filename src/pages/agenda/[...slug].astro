---
import { contentfulClient } from "../../lib/contentful";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import { BLOCKS } from "@contentful/rich-text-types";
import type { TypeEventSkeleton } from "../../lib/contentful";
import Layout from '../../layouts/ContentPage.astro';

export async function getStaticPaths() {
  const { items } = await contentfulClient.withoutUnresolvableLinks.getEntries<TypeEventSkeleton>({
    content_type: "events",
  });
  const options = {
  renderNode: {
    [BLOCKS.PARAGRAPH]: (node, next) => (
      `<p style="font-size: 20px">${next(node.content)}</p>`
    ),
    [BLOCKS.HEADING_1]: (node, next) => (
      `<h1 style="font-size: 30px">${next(node.content)}</h1>`
    ),
    [BLOCKS.EMBEDDED_ASSET]: (node: any) => {
        const { file, title } = node.data.target.fields;
        return (
          `<img
            src=${file.url}
            alt="Contentful Image"
            class="rounded-lg shadow-md mx-auto my-4"
            loading="lazy"
          />`
      
  )}
},
};
  const pages = items.map((item) => ({
    params: { slug: item.fields.slug },
    props: {
      title: item.fields.title,
      body: documentToHtmlString(item.fields.body, options),
      coverImage: item.fields.coverImage
    },
  }));
  return pages;
}

const { body, title, coverImage } = Astro.props;
---
<Layout
	title={`Jardin de Champagne | ${title}/`}
	description="description"
>
<div style={ coverImage && coverImage.fields && coverImage.fields.file ? { backgroundImage:'url(' + coverImage.fields.file.url + ')' } : {}} class="header-section">
    <h1 class="header-title">{title}</h1>
</div>
    <article class="blog-section" set:html={body} />
  </body>
</html>
</Layout>

<style>
    .header-section {
        background-position: center;
    }
    .blog-section {
        padding: 30px 10px;
    }   
    .blog-section h1 b {
      font-size: 30px;
    }
    h1  {
      font-size: 30px !important;
    }
</style>